- name: Install ibm spectrum manifest
  tags:
    - 4_gpfs
  ansible.builtin.shell: |
    set -e
    export KUBECONFIG=./auth/kubeconfig
    {{ oc_bin }} apply -f https://raw.githubusercontent.com/IBM/ibm-spectrum-scale-container-native/{{ gpfs_version }}/generated/scale/install.yaml
  args:
    chdir: "{{ ocpfolder }}"

- name: Create gpfs folder
  tags:
    - 4_gpfs
  ansible.builtin.file:
    path: "{{ gpfsfolder }}"
    state: directory
    recurse: true

- name: template ocp mirror
  tags:
    - 4_gpfs
  ansible.builtin.template:
    src: ../templates/imagedigestmirror.yaml
    dest: "{{ gpfsfolder }}/imagedigestmirror.yaml"

- name: Apply mirror template
  tags:
    - 4_gpfs
  ansible.builtin.shell: |
    set -e
    export KUBECONFIG=./auth/kubeconfig
    {{ oc_bin }} apply -f "{{ gpfsfolder }}/imagedigestmirror.yaml"
  args:
    chdir: "{{ ocpfolder }}"

- name: Update global pull secret
  tags:
    - 4_gpfs
  ansible.builtin.shell: |
    set -ex
    export KUBECONFIG=./auth/kubeconfig
    NEW_PS=$({{ oc_bin }} -n openshift-config get secret pull-secret -o jsonpath='{.data.\.dockerconfigjson}' | base64 -d  | jq -c '.auths += {"quay.io/rhsysdeseng":{"auth":"{{ ibmpullsecret }}", "email":""}}' | base64 -w 0)
    {{ oc_bin }} -n openshift-config patch secret pull-secret -p "{\"data\":{\".dockerconfigjson\":\"$NEW_PS\"}}"
  args:
    chdir: "{{ ocpfolder }}"

- name: Create ibm secret
  tags:
    - 4_gpfs
  ansible.builtin.shell: |
    set -ex
    export KUBECONFIG=./auth/kubeconfig
    cat <<EOF > {{ gpfsfolder }}/ibmscaleps.json
    {"auths":{"quay.io/rhsysdeseng":{"auth":"{{ ibmpullsecret }}","email":""}}}
    EOF
    for namespace in ibm-spectrum-scale ibm-spectrum-scale-operator ibm-spectrum-scale-dns ibm-spectrum-scale-csi; do
      {{ oc_bin }} create secret docker-registry ibm-entitlement-key -n ${namespace} --from-file=.dockerconfigjson={{ gpfsfolder }}/ibmscaleps.json
    done
  failed_when: false
  args:
    chdir: "{{ ocpfolder }}"

- name: Template cluster file
  tags:
    - 4_gpfs
  ansible.builtin.template:
    src: ../templates/cluster.yaml
    dest: "{{ gpfsfolder }}/cluster.yaml"

- name: Label the workers
  tags:
    - 5_gpfs
  ansible.builtin.shell: |
    set -ex
    export KUBECONFIG=./auth/kubeconfig
    for node in $({{ oc_bin }} get nodes -l node-role.kubernetes.io/worker -o name)
    do
      {{ oc_bin }} label ${node} scale.spectrum.ibm.com/role=storage
      {{ oc_bin }} label ${node} scale.spectrum.ibm.com/daemon-selector=""
    done
  args:
    chdir: "{{ ocpfolder }}"

- name: Apply the cluster template
  tags:
    - 5_gpfs
  ansible.builtin.shell: |
    set -ex
    export KUBECONFIG=./auth/kubeconfig
    {{ oc_bin }} apply -f "{{ gpfsfolder }}/cluster.yaml"
  args:
    chdir: "{{ ocpfolder }}"
  retries: 10
  delay: 30
  register: gpfs_cluster_ready
  until: gpfs_cluster_ready is not failed

