---
- name: Playbook to set up ceph
  hosts: localhost
  gather_facts: false
  become: false
  vars_files:
    # Use this to override stuff that won't be committed to git
    - ../overrides.yml
  tasks:
    - name: Print AWS infos
      ansible.builtin.debug:
        msg: "Region: {{ ocp_region }} - Cluster: {{ ocp_cluster_name }}.{{ ocp_domain }} - Workers [{{ ocp_worker_count }}]: {{ ocp_worker_type }}"

    - name: Get workers
      tags:
        - lso1
      ansible.builtin.shell: |
        set -e
        export KUBECONFIG="{{ kubeconfig }}"
        {{ oc_bin }} get nodes -l node-role.kubernetes.io/worker -o name   
      register: workers_raw

    - name: Template LSO operator 
      tags:
        - lso1
      ansible.builtin.template:
        src: ../templates/{{ item }}
        dest: "{{ gpfsfolder }}/{{ item }}"
        mode: "0644"
      loop:
        - lso-subscription.yaml
        - lso-lv.yaml

    - name: Apply lso subscription and lvs
      tags:
        - lso1
      ansible.builtin.shell: |
        set -e
        export KUBECONFIG="{{ kubeconfig }}"
        {{ oc_bin }} apply -f "{{ gpfsfolder }}/{{ item }}"
      register: lso_apply
      until: lso_apply is not failed
      retries: 20
      delay: 10
      loop:
        - lso-subscription.yaml
        - lso-lvs.yaml

    - name: Find OpenShift EC2 Instances
      tags:
        - ceph_disks
      amazon.aws.ec2_instance_info:
        profile: "{{ aws_profile }}"
        region: "{{ ocp_region }}"
        filters:
          "tag:Name": "{{ ocp_cluster_name }}*worker*"
          "instance-state-name": "running"
      register: ec2_workers

    - name: Set EC2 workers instance IDs
      tags:
        - ceph_disks
      ansible.builtin.set_fact:
        worker_ec2_ids: "{{ ec2_workers.instances | map(attribute='instance_id') | list }}"

    - name: debug
      tags:
        - ceph_disks
      ansible.builtin.debug:
        msg: "{{ worker_ec2_ids }}"

    - name: Create EBS io2 volume one per worker
      tags:
        - ceph_disks
      amazon.aws.ec2_vol:
        profile: "{{ aws_profile }}"
        region: "{{ ocp_region }}"
        availability_zone: "{{ ocp_az }}"
        volume_size: "{{ ebs_volume_size_ceph }}"
        volume_type: "{{ ebs_volume_type }}"
        instance: "{{ item }}"
        iops: "{{ ebs_iops }}"
        device_name: "{{ ebs_device_name_ceph }}"
        tags:
          Name: "{{ gpfs_volume_name }}-{{ item }}"
      register: ebs_volumes
      loop: "{{ worker_ec2_ids }}"

    - name: debug
      tags:
        - ceph_disks
      ansible.builtin.debug:
        msg: "{{ ebs_volumes }}"

    - name: Template ceph files
      tags:
        - ceph1
      ansible.builtin.template:
        src: ../templates/{{ item }}
        dest: "{{ gpfsfolder }}/{{ item }}"
        mode: "0644"
      loop:
        - ceph-subscription.yaml
        - ceph-objectstore.yaml
        - ceph-route.yaml
        - ceph-storageclass.yaml
        - ceph-storagecluster.yaml

    - name: Apply ceph subscription
      tags:
        - ceph1
      ansible.builtin.shell: |
        set -e
        export KUBECONFIG="{{ kubeconfig }}"
        {{ oc_bin }} apply -f "{{ gpfsfolder }}/{{ item }}"
      register: ceph_apply
      until: ceph_apply is not failed
      retries: 20
      delay: 10
      loop:
        - ceph-subscription.yaml

    - name: Label the workers for ceph
      tags:
        - ceph1
      ansible.builtin.shell: |
        set -ex
        export KUBECONFIG={{ kubeconfig }}
        for node in $({{ oc_bin }} get nodes -l node-role.kubernetes.io/worker -o name)
        do
          {{ oc_bin }} label ${node} cluster.ocs.openshift.io/openshift-storage=''
        done

    - name: stop
      ansible.builtin.fail:
        msg: "STOP HERE"

    - name: Apply ceph templates
      tags:
        - ceph1
      ansible.builtin.shell: |
        set -e
        export KUBECONFIG="{{ kubeconfig }}"
        {{ oc_bin }} apply -f "{{ gpfsfolder }}/{{ item }}"
      register: ceph_apply
      until: ceph_apply is not failed
      retries: 20
      delay: 10
      loop:
        - ceph-objectstore.yaml
        - ceph-route.yaml
        - ceph-storageclass.yaml
        - ceph-storagecluster.yaml
